version: 2.1

parameters:
  # this flag allows you to disable the default workflow, e.g. when running the standalone publish-snapshot workflow
  enable-default-workflow:
    description: "enables the main workflow that builds and tests on all branches and publishes a snapshot on main"
    type: boolean
    default: true

  # this flag allows you to publish a snapshot from any branch, using a standalone workflow
  enable-publish-snapshot-workflow:
    description: "enables the standalone workflow to build and publish a snapshot from any branch"
    type: boolean
    default: false

aliases:
  - &workspace
      ~/apkscale

  - &gradle-cache-key
      jars-{{ checksum "build.gradle" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}

  - &release-filter
    filters:
      tags:
        only:
          - /^\d+\.\d+\.\d+$/
      branches:
        ignore: /.*/

  - &snapshot-filter
    filters:
      branches:
        only:
          - main

commands:
  restore_gradle_cache:
    steps:
      - restore_cache:
          key: *gradle-cache-key
          name: Restore Gradle Cache

  save_gradle_cache:
    steps:
      - save_cache:
          key: *gradle-cache-key
          name: Save Gradle Cache
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper

  setup_git_user:
    description: Configure git user
    steps:
      - add_ssh_keys:
          fingerprints:
            - "c8:4c:32:3e:72:11:1f:81:f9:5f:1f:a7:d1:17:6b:07"
      - run:
          name: Configure git user name and email
          command: |
            git config --global user.email $GIT_USER_EMAIL
            git config --global user.name $GIT_USER_NAME

  install_signing_key:
    steps:
      - run:
          name: Install signing key
          command: |
            echo $SIGNING_KEY | base64 -d >> $SIGNING_SECRET_KEY_RING_FILE

  publish_artifact:
    description: "Publish apkscale to Sonatype Repository"
    parameters:
      pre-release:
        description: "A boolean value that indicates if the artifact is a release or pre release"
        type: boolean
        default: true
    steps:
      - run:
          name: Publish Apkscale
          command: |
            ./gradlew \
            assemble \
            publishApkscaleReleasePublicationToSonatypeRepository \
            closeAndReleaseSonatypeStagingRepository \
            -Dsigning.keyId=$SIGNING_KEY_ID \
            -Dsigning.password=$SIGNING_PASSWORD \
            -Dsigning.secretKeyRingFile=$SIGNING_SECRET_KEY_RING_FILE \
            -DossrhUsername=$OSSRH_USERNAME \
            -DossrhPassword=$OSSRH_PASSWORD \
            -DsonatypeStagingProfileId=$SONATYPE_STAGING_PROFILE_ID \
            -PpreRelease=<< parameters.pre-release >>

executors:
  build-executor:
    working_directory: *workspace
    docker:
      - image: cimg/android:2024.01.1-node
    resource_class: large
    environment:
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"

jobs:
  check-format:
    executor: build-executor
    resource_class: medium+
    steps:
      - checkout
      - restore_gradle_cache
      - run:
          name: Spotless Check
          command: ./gradlew -q spotlessCheck
      - save_gradle_cache

  build:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run:
          name: Build Apkscale
          command: ./gradlew -q assemble
      - persist_to_workspace:
          root: .
          paths:
            - build
      - save_gradle_cache

  test:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - run:
          name: Test Apkscale
          command: ./gradlew -q test
      - store_test_results:
          path: build/test-results/test
      - save_gradle_cache

  publish-pre-release:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - install_signing_key
      - publish_artifact:
          pre-release: true
      - save_gradle_cache

  publish-release:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - install_signing_key
      - publish_artifact:
          pre-release: false
      - save_gradle_cache

  bump-version:
    executor: build-executor
    steps:
      - checkout
      - attach_workspace:
          at: *workspace
      - restore_gradle_cache
      - setup_git_user
      - run:
          name: Bump Version
          command: ./gradlew incrementVersion
      - save_gradle_cache

workflows:
  build-test-publish:
    when: << pipeline.parameters.enable-default-workflow >>
    jobs:
      - check-format
      - build
      - test:
          requires:
            - build
            - check-format
      - publish-pre-release:
          <<: *snapshot-filter
          requires:
            - test

  release:
    jobs:
      - publish-release:
          <<: *release-filter
      - bump-version:
          <<: *release-filter

          requires:
            - publish-release

  # Workflow to explicitly build and publish a snapshot. Triggered manually by setting the parameter to true.
  publish-snapshot:
    when: << pipeline.parameters.enable-publish-snapshot-workflow >>
    jobs:
      - publish-pre-release
